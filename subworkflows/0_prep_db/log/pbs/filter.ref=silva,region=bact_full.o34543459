Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cores: 2
Rules claiming more threads will be scaled down.
Unlimited resources: procs
Job counts:
	count	jobs
	1	filter
	1

[Tue Sep 10 13:17:21 2019]
rule filter:
    input: data/silva/silva.bact_full.fasta, data/silva/silva.bacteria.tax
    output: data/silva/silva.bact_full.filter.fasta, data/silva/silva.bact_full.filter.names, data/silva/silva.bact_full.filter.unique.fasta, data/silva/silva.bact_full.filter.unique.precluster.fasta, data/silva/silva.bact_full.filter.unique.precluster.count_table, data/silva/silva.bact_full.filter.unique.precluster.accnos, data/silva/silva.bacteria.bact_full.precluster.tax
    log: logfiles/silva/filter.bact_full.log
    jobid: 0
    benchmark: benchmarks/silva/filter.bact_full.txt
    wildcards: ref=silva, region=bact_full
    resources: procs=2

[3J[H[2JLinux version

Using ReadLine,Boost,HDF5
mothur v.1.42.3
Last updated: 09/10/2019
by
Patrick D. Schloss

Department of Microbiology & Immunology

University of Michigan
http://www.mothur.org

When using, please cite:
Schloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.

Distributed under the GNU General Public License

Type 'help()' for information on the commands that are available

For questions and analysis support, please visit our forum at https://forum.mothur.org

Type 'quit()' to exit program

[NOTE]: Setting random seed to 19760620.

Script Mode


mothur > set.logfile(name=logfiles/silva/filter.bact_full.log)

mothur > set.dir(input=data/silva/)
Mothur's directories:
inputDir=data/silva/

mothur > 
        filter.seqs(fasta=data/silva/silva.bact_full.fasta, trump=., vertical=T, processors=2)

Using 2 processors.
Creating Filter... 
1000
1000
2000
2000
3000
3000
4000
4000
4210
4210
It took 13 secs to create filter for 8420 sequences.


Running Filter... 
1000
1000
2000
2000
3000
3000
4000
4000
4210
4210
It took 10 secs to filter 8420 sequences.



Length of filtered alignment: 5717
Number of columns removed: 44283
Length of the original alignment: 50000
Number of sequences used to construct filter: 8420

Output File Names: 
data/silva/silva.filter
data/silva/silva.bact_full.filter.fasta


mothur > 
        unique.seqs(fasta=data/silva/silva.bact_full.filter.fasta)
1000	1000
2000	2000
3000	3000
4000	4000
5000	5000
6000	6000
7000	7000
8000	8000
8420	8420

Output File Names: 
data/silva/silva.bact_full.filter.names
data/silva/silva.bact_full.filter.unique.fasta


mothur > 
        pre.cluster(fasta=data/silva/silva.bact_full.filter.unique.fasta, name=data/silva/silva.bact_full.filter.names, diffs=2, processors=2)

Using 2 processors.
When using running without group information mothur can only use 1 processor, continuing.
0	8420	0
100	8420	0
200	8420	0
300	8420	0
400	8420	0
500	8420	0
600	8420	0
700	8420	0
800	8420	0
900	8420	0
1000	8420	0
1100	8420	0
1200	8420	0
1300	8420	0
1400	8420	0
1500	8420	0
1600	8420	0
1700	8420	0
1800	8420	0
1900	8420	0
2000	8420	0
2100	8420	0
2200	8420	0
2300	8420	0
2400	8420	0
2500	8420	0
2600	8420	0
2700	8420	0
2800	8420	0
2900	8420	0
3000	8420	0
3100	8420	0
3200	8420	0
3300	8420	0
3400	8420	0
3500	8420	0
3600	8420	0
3700	8420	0
3800	8420	0
3900	8420	0
4000	8420	0
4100	8420	0
4200	8420	0
4300	8420	0
4400	8420	0
4500	8420	0
4600	8420	0
4700	8420	0
4800	8420	0
4900	8420	0
5000	8420	0
5100	8420	0
5200	8420	0
5300	8420	0
5400	8420	0
5500	8420	0
5600	8420	0
5700	8420	0
5800	8420	0
5900	8420	0
6000	8420	0
6100	8420	0
6200	8420	0
6300	8420	0
6400	8420	0
6500	8420	0
6600	8420	0
6700	8420	0
6800	8420	0
6900	8420	0
7000	8420	0
7100	8420	0
7200	8420	0
7300	8420	0
7400	8420	0
7500	8420	0
7600	8420	0
7700	8420	0
7800	8420	0
7900	8420	0
8000	8420	0
8100	8420	0
8200	8420	0
8300	8420	0
8400	8420	0
8420	8420	0
Total number of sequences before precluster was 8420.
pre.cluster removed 0 sequences.

/******************************************/
Running command: get.seqs(fasta=data/silva/silva.bact_full.filter.unique.fasta, accnos=data/silva/silva.bact_full.filter.unique.precluster.fasta.temp)
[WARNING]: This command can take a namefile and you did not provide one. The current namefile is data/silva/silva.bact_full.filter.names which seems to match data/silva/silva.bact_full.filter.unique.fasta.
Selected 8420 sequences from your fasta file.

Output File Names: 
data/silva/silva.bact_full.filter.unique.pick.fasta

/******************************************/
Done.
It took 7 secs to cluster 8420 sequences.

Output File Names: 
data/silva/silva.bact_full.filter.count_table
data/silva/silva.bact_full.filter.unique.precluster.fasta
data/silva/silva.bact_full.filter.unique.precluster.count_table
data/silva/silva.bact_full.filter.unique.precluster.map


mothur > 
        list.seqs(fasta=data/silva/silva.bact_full.filter.unique.precluster.fasta)

Output File Names: 
data/silva/silva.bact_full.filter.unique.precluster.accnos


mothur > 
        get.seqs(taxonomy=data/silva/silva.bacteria.tax, accnos=current) 
Using data/silva/silva.bact_full.filter.unique.precluster.accnos as input file for the accnos parameter.
[WARNING]: This command can take a namefile and you did not provide one. The current namefile is data/silva/silva.bact_full.filter.names which seems to match data/silva/silva.bacteria.tax.
Selected 8420 sequences from your taxonomy file.

Output File Names: 
data/silva/silva.bacteria.pick.tax


mothur > quit()


<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Detected 2 [WARNING] messages, please review.
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<^>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[Tue Sep 10 13:18:00 2019]
Finished job 0.
1 of 1 steps (100%) done
